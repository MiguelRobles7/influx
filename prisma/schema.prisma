// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["public", "auth"]
}

model User {
  instance_id                 String?   @default(uuid())
  id                          String    @id @default(uuid())
  aud                         String?
  role                        String?
  email                       String?
  encrypted_password          String?
  email_confirmed_at          DateTime?
  invited_at                  DateTime?
  confirmation_token          String?
  confirmation_sent_at        DateTime?
  recovery_token              String?
  recovery_sent_at            DateTime?
  email_change_token_new      String?
  email_change                String?
  email_change_sent_at        DateTime?
  last_sign_in_at             DateTime?
  raw_app_meta_data           Json?
  raw_user_meta_data          Json?
  is_super_admin              Boolean?
  created_at                  DateTime?
  updated_at                  DateTime?
  phone                       String?   @default("NULL")
  phone_confirmed_at          DateTime?
  phone_change                String?   @default("")
  phone_change_token          String?   @default("")
  phone_change_sent_at        DateTime?
  confirmed_at                DateTime?
  email_change_token_current  String?   @default("")
  email_change_confirm_status Int?      @default(0)
  banned_until                DateTime?
  reauthentication_token      String?   @default("")
  reauthentication_sent_at    DateTime?
  is_sso_user                 Boolean?  @default(false)
  deleted_at                  DateTime?
  Profile                     Profile[]
  Post                        Post[]

  @@schema("auth")
  @@map("users")
}

model Profile {
  id               BigInt   @id @default(autoincrement())
  icon             String?
  first_name       String
  last_name        String
  location         String
  description      String?
  delivery_methods String[]
  payment_methods  String[]
  User             User?    @relation(fields: [user_id], references: [id])
  user_id          String

  @@schema("public")
  @@map("profiles")
}

model Post {
  id          BigInt    @id @default(autoincrement())
  created_at  DateTime
  title       String
  price       Float     @default(0.00)
  condition   String
  description String?
  media       String[]
  tags        String[]
  negotiable  Boolean   @default(false)
  edited      Boolean   @default(false)
  edited_at   DateTime?
  upvotes     String[]
  downvotes   String[]
  shares      BigInt    @default(0)
  interested  String[]
  bookmarks   String[]
  comments    Json?
  User        User?     @relation(fields: [user_id], references: [id])
  user_id     String

  @@schema("public")
  @@map("posts")
}
